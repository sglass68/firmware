#!/bin/sh
# Copyright (c) 2010 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# All scripts should die on error unless commands are specifically excepted
# by prefixing with '!' or surrounded by 'set +e' / 'set -e'.
set -e

# Global variable
TMP_DIR=  # will be set by make_temp() function.

IS_VERBOSE=  # decide if we need to print messages

# Prints a message and return an error code.
error_exit()
{
  echo $1
  clean_temp
  exit 1
}

verbose_message()
{
  test -z "$IS_VERBOSE" || echo "$*"
}

# Untar the file to a temp directory, then chdir to that directory.
untar_and_chdir()
{
  SELF="$1"

  verbose_message "Extract to $TMP_DIR ..."
  uudecode -o - "$SELF" | tar -C "$TMP_DIR" -zxf -

  if [ ! -x "$TMP_DIR" ] || [ ! -d "$TMP_DIR" ]; then
    error_exit "Create temp directory $TMP_DIR failed ..."
  fi

  if ! cd $TMP_DIR; then
    error_exit "Cannot chdir to $TMP_DIR ..."
  fi
}

make_temp()
{
  TMP_DIR=`mktemp -d`
}

clean_temp()
{
  verbose_message "Clean up $TMP_DIR ..."
  rm -rf $TMP_DIR
}

SELF="$0"
case "$1" in
  -V)
    make_temp
    untar_and_chdir "$SELF"
    cat VERSION
    clean_temp
    exit 0
    ;;
  --sb_check)
    make_temp
    untar_and_chdir "$SELF"
    md5sum -c VERSION
    ret=$?
    clean_temp
    exit $ret
    ;;
  --sb_extract)
    make_temp
    IS_VERBOSE=1
    untar_and_chdir "$SELF"
    exit 0
    ;;
  -h|"-?"|--help)
    echo "Shellball -- self-extract and install"
    echo ""
    echo "Usage: $SELF [options] [-- [inside-script-options]]"
    echo ""
    echo "options:"
    echo "           -h  show usage help"
    echo "           -V  show version of containing files"
    echo "   --sb_check  check content integrity"
    echo " --sb_extract  extract content to temp folder"
    echo ""
    echo " All other parameters will be passed to the script inside."
    echo ""
    echo " You can invoke as '$SELF -- -h'"
    echo " to see the usage and options of inside-script."
    echo ""
    exit 1
    ;;
  --debug | --verbose | -v)
    # do not shift here because this needs to be passed into the script
    IS_VERBOSE=1
    ;;
  --)
    shift
    ;;
esac

# for all other cases, invoke carried script
make_temp
untar_and_chdir "$SELF"

SCRIPT=./install_firmware
if [ ! -x $SCRIPT ]; then
  error_exit "Cannot execute $SCRIPT"
fi
verbose_message "Run built-in script ($SCRIPT) ..."
if ! $SCRIPT "$@"; then
  error_exit "ERROR: Script $SCRIPT returned as failed (#$?)!"
fi
clean_temp
exit 0

# Below are uuencoded blob. Don't put code behind exit 0.
